%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Microsoft Windows 8.
%%Title: AnSchoLin\identification\AnSchoLin_sensitivity_Current_params.eps
%%CreationDate: 07/04/2014  11:39:39
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    70   397   546   602
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    70   397   546   602
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  628   110  5711  2466 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 rf
6 w
0 1769 5361 0 0 -1769 899 2158 4 MP
PP
-5361 0 0 1769 5361 0 0 -1769 899 2158 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899  389 mt 6260  389 L
 899 2158 mt 6260 2158 L
6260 2158 mt 6260  389 L
 899 2158 mt  899  389 L
 899 2158 mt 6260 2158 L
 899 2158 mt  899  389 L
 899 2158 mt  899 2104 L
 899  389 mt  899  442 L
1494 2158 mt 1494 2104 L
1494  389 mt 1494  442 L
2090 2158 mt 2090 2104 L
2090  389 mt 2090  442 L
2686 2158 mt 2686 2104 L
2686  389 mt 2686  442 L
3282 2158 mt 3282 2104 L
3282  389 mt 3282  442 L
3877 2158 mt 3877 2104 L
3877  389 mt 3877  442 L
4473 2158 mt 4473 2104 L
4473  389 mt 4473  442 L
5069 2158 mt 5069 2104 L
5069  389 mt 5069  442 L
5665 2158 mt 5665 2104 L
5665  389 mt 5665  442 L
6261 2158 mt 6261 2104 L
6261  389 mt 6261  442 L
 899 2158 mt  952 2158 L
6261 2158 mt 6207 2158 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 728 2202 mt 
(-1) s
 899 1715 mt  952 1715 L
6261 1715 mt 6207 1715 L
 628 1759 mt 
(-0.5) s
 899 1273 mt  952 1273 L
6261 1273 mt 6207 1273 L
 798 1317 mt 
(0) s
 899  831 mt  952  831 L
6261  831 mt 6207  831 L
 698  875 mt 
(0.5) s
 899  389 mt  952  389 L
6261  389 mt 6207  389 L
 798  433 mt 
(1) s
 899  389 mt 6260  389 L
 899 2158 mt 6260 2158 L
6260 2158 mt 6260  389 L
 899 2158 mt  899  389 L
gs 899 389 5363 1770 rc
/c8 { 0.000000 0.000000 0.562500 sr} bdef
c8
0 0 53 0 0 0 1104 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1104 1273 5 MP stroke
c8
0 0 53 0 0 0 1402 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1402 1273 5 MP stroke
c8
0 0 53 0 0 0 1699 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1699 1273 5 MP stroke
c8
0 0 53 0 0 0 1997 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1997 1273 5 MP stroke
c8
0 0 53 0 0 0 2295 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2295 1273 5 MP stroke
c8
0 0 53 0 0 0 2593 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2593 1273 5 MP stroke
c8
0 0 53 0 0 0 2891 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2891 1273 5 MP stroke
c8
0 0 53 0 0 0 3189 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3189 1273 5 MP stroke
c8
0 0 53 0 0 0 3487 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3487 1273 5 MP stroke
c8
0 0 53 0 0 0 3785 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3785 1273 5 MP stroke
c8
0 0 53 0 0 0 4083 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4083 1273 5 MP stroke
c8
0 0 53 0 0 0 4380 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4380 1273 5 MP stroke
c8
0 0 53 0 0 0 4678 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4678 1273 5 MP stroke
c8
0 0 53 0 0 0 4976 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4976 1273 5 MP stroke
c8
0 0 53 0 0 0 5274 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5274 1273 5 MP stroke
c8
0 0 53 0 0 0 5572 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5572 1273 5 MP stroke
c8
0 0 53 0 0 0 5870 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5870 1273 5 MP stroke
5361 0 899 1273 2 MP stroke
/c9 { 0.562500 1.000000 0.437500 sr} bdef
c9
0 0 53 0 0 0 1170 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1170 1273 5 MP stroke
c9
0 0 53 0 0 0 1468 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1468 1273 5 MP stroke
c9
0 0 53 0 0 0 1766 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1766 1273 5 MP stroke
c9
0 0 53 0 0 0 2064 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2064 1273 5 MP stroke
c9
0 0 53 0 0 0 2361 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2361 1273 5 MP stroke
c9
0 0 53 0 0 0 2659 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2659 1273 5 MP stroke
c9
0 0 53 0 0 0 2957 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2957 1273 5 MP stroke
c9
0 0 53 0 0 0 3255 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3255 1273 5 MP stroke
c9
0 0 53 0 0 0 3553 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3553 1273 5 MP stroke
c9
0 0 53 0 0 0 3851 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3851 1273 5 MP stroke
c9
0 0 53 0 0 0 4149 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4149 1273 5 MP stroke
c9
0 0 53 0 0 0 4447 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4447 1273 5 MP stroke
c9
0 0 53 0 0 0 4745 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4745 1273 5 MP stroke
c9
0 0 53 0 0 0 5042 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5042 1273 5 MP stroke
c9
0 0 53 0 0 0 5340 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5340 1273 5 MP stroke
c9
0 0 53 0 0 0 5638 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5638 1273 5 MP stroke
c9
0 0 53 0 0 0 5936 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5936 1273 5 MP stroke
/c10 { 0.500000 0.000000 0.000000 sr} bdef
c10
0 0 53 0 0 0 1236 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1236 1273 5 MP stroke
c10
0 0 53 0 0 0 1534 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1534 1273 5 MP stroke
c10
0 0 53 0 0 0 1832 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 1832 1273 5 MP stroke
c10
0 0 53 0 0 0 2130 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2130 1273 5 MP stroke
c10
0 0 53 0 0 0 2428 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2428 1273 5 MP stroke
c10
0 0 53 0 0 0 2726 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 2726 1273 5 MP stroke
c10
0 0 53 0 0 0 3023 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3023 1273 5 MP stroke
c10
0 0 53 0 0 0 3321 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3321 1273 5 MP stroke
c10
0 0 53 0 0 0 3619 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3619 1273 5 MP stroke
c10
0 0 53 0 0 0 3917 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 3917 1273 5 MP stroke
c10
0 0 53 0 0 0 4215 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4215 1273 5 MP stroke
c10
0 0 53 0 0 0 4513 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4513 1273 5 MP stroke
c10
0 0 53 0 0 0 4811 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 4811 1273 5 MP stroke
c10
0 0 53 0 0 0 5109 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5109 1273 5 MP stroke
c10
0 0 53 0 0 0 5407 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5407 1273 5 MP stroke
c10
0 0 53 0 0 0 5704 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 5704 1273 5 MP stroke
c10
0 0 53 0 0 0 6002 1273 4 MP
PP
0 sg
-53 0 0 0 53 0 0 0 6002 1273 5 MP stroke
gr

1238 2324 mt  -90 rotate
(bet) s
90 rotate
1536 2351 mt  -90 rotate
(kap) s
90 rotate
1834 2324 mt  -90 rotate
(tau) s
90 rotate
2132 2551 mt  -90 rotate
(gam_Q) s
90 rotate
2430 2398 mt  -90 rotate
(rhog) s
90 rotate
2728 2344 mt  -90 rotate
(r_A) s
90 rotate
3026 2391 mt  -90 rotate
(rhoz) s
90 rotate
3324 2371 mt  -90 rotate
(p_A) s
90 rotate
3621 2351 mt  -90 rotate
(e_z) s
90 rotate
3919 2358 mt  -90 rotate
(e_g) s
90 rotate
4217 2378 mt  -90 rotate
(e_R) s
90 rotate
4515 2378 mt  -90 rotate
(psi1) s
90 rotate
4813 2378 mt  -90 rotate
(psi2) s
90 rotate
5111 2418 mt  -90 rotate
(rhoR) s
90 rotate
5409 2404 mt  -90 rotate
(stdR) s
90 rotate
5707 2384 mt  -90 rotate
(stdg) s
90 rotate
6005 2378 mt  -90 rotate
(stdz) s
90 rotate
2402  294 mt 
(Sensitivity bars using derivatives \(log-scale\)) s
 870 2213 mt 
( ) s
6233  443 mt 
( ) s
1 sg
0 546 1099 0 0 -546 4614 1206 4 MP
PP
-1099 0 0 546 1099 0 0 -546 4614 1206 5 MP stroke
4 w
DO
SO
6 w
0 sg
4614  660 mt 5713  660 L
4614 1206 mt 5713 1206 L
5713 1206 mt 5713  660 L
4614 1206 mt 4614  660 L
4614 1206 mt 5713 1206 L
4614 1206 mt 4614  660 L
4614  660 mt 5713  660 L
4614 1206 mt 5713 1206 L
5713 1206 mt 5713  660 L
4614 1206 mt 4614  660 L
5083  807 mt 
(Moments) s
gs 4614 660 1100 547 rc
c8
-360 0 0 123 360 0 0 -123 4686 826 5 MP
PP
0 sg
0 0 -360 0 0 123 360 0 0 -123 4686 826 6 MP stroke
gr

5083  976 mt 
(Model) s
gs 4614 660 1100 547 rc
c9
-360 0 0 123 360 0 0 -123 4686 994 5 MP
PP
0 sg
0 0 -360 0 0 123 360 0 0 -123 4686 994 6 MP stroke
gr

5083 1144 mt 
(LRE model) s
gs 4614 660 1100 547 rc
c10
-360 0 0 123 360 0 0 -123 4686 1162 5 MP
PP
0 sg
0 0 -360 0 0 123 360 0 0 -123 4686 1162 6 MP stroke
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
